# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes 4;
worker_rlimit_nofile 40000;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 8192;
}

http {
    root /var/www;
    index index.php index.htm index.html;
}

stream {
    # RKE2 - Node Registration
    # This server accepts all traffic to port 9345 and passes it to the upstream.
    # Notice that the upstream name and the proxy_pass need to match.
    upstream rke2_backend {
        least_conn;
        server 192.168.0.140:9345 max_fails=3 fail_timeout=5s;
        server 192.168.0.141:9345 max_fails=3 fail_timeout=5s;
        server 192.168.0.142:9345 max_fails=3 fail_timeout=5s;
        server 192.168.0.143:9345 max_fails=3 fail_timeout=5s;
        server 192.168.0.144:9345 max_fails=3 fail_timeout=5s;
        server 192.168.0.145:9345 max_fails=3 fail_timeout=5s;
    }   
    server {
        listen 9345;
        proxy_pass rke2_backend;
    }

     # RKE2 kubelet
    upstream rke2_kubelet {
        least_conn;
        server 192.168.0.140:10250 max_fails=3 fail_timeout=5s;
        server 192.168.0.141:10250 max_fails=3 fail_timeout=5s;
        server 192.168.0.142:10250 max_fails=3 fail_timeout=5s;
        server 192.168.0.143:10250 max_fails=3 fail_timeout=5s;
        server 192.168.0.144:10250 max_fails=3 fail_timeout=5s;
        server 192.168.0.145:10250 max_fails=3 fail_timeout=5s;
    }
    server {
        listen 10250;
        proxy_pass rke2_kubelet;
    }

    # RKE2 etcd client port
    upstream rke2_etcd_client {
        least_conn;
        server 192.168.0.140:2379 max_fails=3 fail_timeout=5s;
        server 192.168.0.141:2379 max_fails=3 fail_timeout=5s;
        server 192.168.0.142:2379 max_fails=3 fail_timeout=5s;        
    }
    server {
        listen 2379;
        proxy_pass rke2_etcd_client;
    }

    # RKE2 etcd peer port
    upstream rke2_etcd_peer {
        least_conn;
        server 192.168.0.140:2380 max_fails=3 fail_timeout=5s;
        server 192.168.0.141:2380 max_fails=3 fail_timeout=5s;
        server 192.168.0.142:2380 max_fails=3 fail_timeout=5s;        
    }
    server {
        listen 2380;
        proxy_pass rke2_etcd_peer;
    }

    # RKE2 API
    upstream rke2_api {
        least_conn;
        server 192.168.0.140:6443 max_fails=3 fail_timeout=5s;
        server 192.168.0.141:6443 max_fails=3 fail_timeout=5s;
        server 192.168.0.142:6443 max_fails=3 fail_timeout=5s;
        server 192.168.0.143:6443 max_fails=3 fail_timeout=5s;
        server 192.168.0.144:6443 max_fails=3 fail_timeout=5s;
        server 192.168.0.145:6443 max_fails=3 fail_timeout=5s;
    }
    server {
        listen 6443;
        proxy_pass rke2_api;
    }

    # Rancher UI http
    upstream rancher_http {
        least_conn;        
        server 192.168.0.143:80 max_fails=3 fail_timeout=5s;
        server 192.168.0.144:80 max_fails=3 fail_timeout=5s;
        server 192.168.0.145:80 max_fails=3 fail_timeout=5s;
    }
    server {
        listen 80;
        proxy_pass rancher_http;
    }

    # Rancher UI https
    upstream rancher_https {
        least_conn;
        server 192.168.0.140:443 max_fails=3 fail_timeout=5s;
        server 192.168.0.141:443 max_fails=3 fail_timeout=5s;
        server 192.168.0.142:443 max_fails=3 fail_timeout=5s;
        server 192.168.0.143:443 max_fails=3 fail_timeout=5s;
        server 192.168.0.144:443 max_fails=3 fail_timeout=5s;
        server 192.168.0.145:443 max_fails=3 fail_timeout=5s;
    }
    server {
        listen 443;
        proxy_pass rancher_https;
        # ssl_certificate "/etc/ssl/certs/skynet.com.br-server-cert.pem";
        # ssl_certificate_key "/etc/ssl/certs/skynet.com.br-server-key.pem";
        # ssl_session_cache shared:SSL:1m;
        # ssl_session_timeout 10m;
        # ssl_ciphers PROFILE=SYSTEM;
        # ssl_prefer_server_ciphers on;
    }
    # Node exporter
    upstream node_exporter {
        least_conn;
        server 192.168.0.143:9100 max_fails=3 fail_timeout=5s;
        server 192.168.0.144:9100 max_fails=3 fail_timeout=5s;
        server 192.168.0.145:9100 max_fails=3 fail_timeout=5s;
    }
    server {
        listen 9100;
        proxy_pass node_exporter;
    }
        
    # # My app label app=app-silvestrini
    # upstream app_silvestrini {
    #     least_conn;
    #     server 192.168.0.143:9001 max_fails=3 fail_timeout=5s;
    #     server 192.168.0.144:9001 max_fails=3 fail_timeout=5s;
    #     server 192.168.0.145:9001 max_fails=3 fail_timeout=5s;
    # }
    # server {
    #     listen 9001;
    #     proxy_pass app_silvestrini;
    # }
}

