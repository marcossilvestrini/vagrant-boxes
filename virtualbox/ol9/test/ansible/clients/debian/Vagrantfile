# -*- mode: ruby -*-
# vi: set ft=ruby :

# INSTAL PLUGINS
unless Vagrant.has_plugin?("vagrant-reload")
  puts 'Installing vagrant-reload Plugin...'
  system('vagrant plugin install vagrant-reload')
end
unless Vagrant.has_plugin?("vagrant-vbguest")
  puts 'Installing vagrant-vbguest Plugin...'
  system('vagrant plugin install vagrant-vbguest')
end
unless Vagrant.has_plugin?("vagrant-disksize")
  puts 'Installing vagrant-disksize Plugin...'
  system('vagrant plugin install vagrant-disksize')
end

# DEFINE MACHINE
Vagrant.configure("2") do |config|  
  # SET BOX
  config.vm.box = "debian/bullseye64"
  config.vm.box_download_insecure=true  
  config.vbguest.auto_update = false
  config.vbguest.no_install  = true  
  config.vbguest.no_remote   = true
  

  config.vm.network "public_network", ip: "192.168.0.132", netmask: "255.255.255.0", mode: "bridge",bridge:[
    "Intel(R) I211 Gigabit Network Connection",
    "MediaTek Wi-Fi 6 MT7921 Wireless LAN"
  ]

  # GLOBAL CUSTOMS
  
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.synced_folder "../../../../configs/linux/", "/home/vagrant/configs"  
  config.vm.synced_folder "../../../../scripts/linux", "/home/vagrant/scripts"
  config.vm.synced_folder "../../../../security", "/home/vagrant/security"
  config.vm.synced_folder "../../../../ansible", "/home/vagrant/ansible"

  config.vm.provider "virtualbox" do |vb|
      vb.name = "silvestrini-debian"
      vb.customize ["modifyvm", :id, "--nested-hw-virt", "on"]      
  end

  # SETUP
  config.vm.provision "shell", name: "[SCRIPT CLOUD-INIT.SH]", path: "../../../../scripts/linux/commons/cloud-init.sh"
end
